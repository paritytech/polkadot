
//! Autogenerated weights for `frame_election_provider_support`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-01, STEPS: `1`, REPEAT: 1, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kusama-dev"), DB CACHE: 1024

// Executed Command:
// target/debug/polkadot
// benchmark
// --chain=kusama-dev
// --steps=1
// --repeat=1
// --pallet=frame_election_provider_support
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=runtime/kusama/src/weights/frame_election_provider_support.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `frame_election_provider_support`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> frame_election_provider_support::WeightInfo for WeightInfo<T> {
	// Storage: BagsList CounterForListNodes (r:1 w:0)
	// Storage: Staking SlashingSpans (r:1 w:0)
	// Storage: BagsList ListBags (r:200 w:0)
	// Storage: BagsList ListNodes (r:2000 w:0)
	// Storage: Staking Nominators (r:2000 w:0)
	// Storage: Staking Bonded (r:2000 w:0)
	// Storage: Staking Ledger (r:2000 w:0)
	// Storage: Staking Validators (r:1001 w:0)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Staking CounterForValidators (r:1 w:0)
	// Storage: Staking ValidatorCount (r:1 w:0)
	fn phragmen(v: u32, t: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 165_188_000
			.saturating_add((458_705_000 as Weight).saturating_mul(v as Weight))
			// Standard Error: 330_377_000
			.saturating_add((740_561_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 15_017_168_000
			.saturating_add((6_523_485_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(206 as Weight))
			.saturating_add(T::DbWeight::get().reads((4 as Weight).saturating_mul(v as Weight)))
			.saturating_add(T::DbWeight::get().reads((5 as Weight).saturating_mul(t as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: BagsList CounterForListNodes (r:1 w:0)
	// Storage: Staking SlashingSpans (r:1 w:0)
	// Storage: BagsList ListBags (r:200 w:0)
	// Storage: BagsList ListNodes (r:2000 w:0)
	// Storage: Staking Nominators (r:2000 w:0)
	// Storage: Staking Bonded (r:2000 w:0)
	// Storage: Staking Ledger (r:2000 w:0)
	// Storage: Staking Validators (r:1001 w:0)
	// Storage: System BlockWeight (r:1 w:1)
	// Storage: Staking CounterForValidators (r:1 w:0)
	// Storage: Staking ValidatorCount (r:1 w:0)
	fn phragmms(v: u32, t: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 1_405_548_000
			.saturating_add((1_285_416_000 as Weight).saturating_mul(v as Weight))
			// Standard Error: 2_811_097_000
			.saturating_add((2_258_488_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 127_777_146_000
			.saturating_add((68_423_545_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(206 as Weight))
			.saturating_add(T::DbWeight::get().reads((4 as Weight).saturating_mul(v as Weight)))
			.saturating_add(T::DbWeight::get().reads((5 as Weight).saturating_mul(t as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
