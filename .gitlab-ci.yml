stages:
  - test
  - build

image:                             parity/rust:gitlab-ci

variables:
  CI_SERVER_NAME:                  "GitLab CI"
  CARGO_HOME:                      "${CI_PROJECT_DIR}/cargo"


cache:
  key:                             "${CI_JOB_NAME}"
  paths:
    - target/
    - cargo/


.collect_artifacts:                &collect_artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
    - target/release/polkadot

.determine_version: &determine_version |
  export VERSION="$(sed -r -n '1,/^version/s/^version = "([^"]+)".*$/\1/p' Cargo.toml)"
  echo "Version" $VERSION




#### stage:                        test

test:rust:stable:                  &test
  stage:                           test
  variables:
    RUST_TOOLCHAIN: stable
    TARGET: native
  script:
    - ./scripts/init.sh
    - export PATH="${CI_PROJECT_DIR}/cargo/bin/:$PATH"
    - ./scripts/build.sh
    - time cargo test --all --release
  tags:
    - rust-stable 


#### stage:                        build

build:linux:ubuntu:amd64:          &build
  stage:                           build
  only:                            master
  variables:
    CARGO_TARGET:                  x86_64-unknown-linux-gnu
    TARGET:                        native
    RUST_TOOLCHAIN:                stable
  script:
    - ./scripts/init.sh
    - export PATH="${CI_PROJECT_DIR}/cargo/bin/:$PATH"
    - ./scripts/build.sh 
    - cargo build --release
  <<:                              *collect_artifacts
  tags:
    - rust-stable

